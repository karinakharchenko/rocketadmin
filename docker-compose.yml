version: "3.7"
services:
  backend:
    build:
      context: .
    ports:
      - 3000:3000
    env_file: ./backend/.development.env
    volumes:
      - ./backend/dist:/app/dist
      - ./backend/src:/app/src
      - ./backend/src/migrations:/app/src/migrations
    depends_on:
      - postgres
      - testDB
      - testMySQL-e2e-testing
      - testPg-e2e-testing
      - mssql-e2e-testing
      - nestjsTesting
      - test-oracle-e2e-testing
    links:
      - postgres
      - testDB
      - testMySQL-e2e-testing
      - testPg-e2e-testing
      - mssql-e2e-testing
      - nestjsTesting
      - test-oracle-e2e-testing
    command: ["yarn", "start:dev"]

  frontend:
    build:
      context: frontend
    environment:
      API_ROOT: http://backend:3000
    ports:
      - 80:80
    depends_on:
      - backend
    links:
      - backend

  testDB:
    image: postgres
    ports:
      - 8000:8000
    environment:
      POSTGRES_PASSWORD: 123
    command: postgres -c 'max_connections=300'  

  nestjsTesting:
    image: postgres
    ports:
      - 8001:5432
    environment:
      POSTGRES_PASSWORD: postgres
    command: postgres -c 'max_connections=300'  

  testMySQL-e2e-testing:
    image: mysql:8.0.23
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: testDB

  testPg-e2e-testing:
    image: postgres
    ports:
      - 9002:5432
    environment:
      POSTGRES_PASSWORD: 123
    command: postgres -c 'max_connections=300'  

  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: abc123
    command: postgres -c 'max_connections=300'  

  mssql-e2e-testing:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - SA_PASSWORD=yNuXf@6T#BgoQ%U6knMp
      - ACCEPT_EULA=Y
    ports:
      - "5434:1433"

  test-oracle-e2e-testing:
    image: gvenzl/oracle-xe:latest
    ports:
      - 1521:1521
    environment:
      ORACLE_PASSWORD: 12345

  rocketadmin-agent_oracle:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8088:8088
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
    links:
      - autoadmin-ws-server
    depends_on:
      - autoadmin-ws-server
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.oracle_test_agent_config.txt
    command: ["yarn", "start:dev"]

  rocketadmin-agent_postgres:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8098:8098
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
    links:
      - autoadmin-ws-server
    depends_on:
      - autoadmin-ws-server
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.postgres_test_agent_config.txt
    command: ["yarn", "start:dev"]    

  rocketadmin-agent_mysql:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8108:8108
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
    links:
      - autoadmin-ws-server
    depends_on:
      - autoadmin-ws-server
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.mysql_test_agent_config.txt
    command: ["yarn", "start:dev"]   

  autoadmin-ws-server:
    build:
      context: autoadmin-ws-server
    ports:
      - 8008:8008
    env_file: ./autoadmin-ws-server/.ws-server-development.env
    volumes:
      - ./autoadmin-ws-server/dist:/app/dist
      - ./autoadmin-ws-server/src:/app/src
    links:
      - backend
    depends_on:
      - backend  
